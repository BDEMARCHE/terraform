name: Terraform CI
run-name: Deploy by @${{ github.actor }}
on:
  push:
    branches:
      - main
      
env:
  ORGANIZATION: "M2I"
  
jobs:
  job1:
    runs-on: ubuntu-latest
    steps:
      - name: starting by checkout
        uses: actions/checkout@v4

  job2:
    runs-on: ubuntu-latest
    steps:
        - name: get terraform details and not capture output
          uses: sarathkrish/invoke-terraform-run-api@v1.0
          with:
            workSpaceName: "terraform"
            organizationName: ${{ env.ORGANIZATION }}
            terraformToken: ${{ secrets.TERRAFORM_TOKEN }}
            terraformHost: "app.terraform.io"
            isDestroy: false
            message: 'GitHub Actions'

  job3:
    runs-on: ubuntu-latest
    needs: job2
    outputs:
      terraformdisplay: ${{ steps.terraform-api-output.outputs.test }}
    steps:
      - id: terraform-api-output
        name: Run Terraform API Command and Capture Output to GITHUB_OUTPUT
        run: echo "test=${{ needs.job3.outputs.terraformdisplay }}" >> "$GITHUB_OUTPUT"
  job33:
    runs-on: ubuntu-latest
    needs: job3
    steps:
      - env:
          MYJSON: ${{ needs.job3.outputs.terraformdisplay }}
        run: "echo $MYJSON"
#  job4: 
#    runs-on: ubuntu-latest
#    needs: job3
#    steps:
#      - name: Upload Terraform API Command Output
#        uses: actions/upload-artifact@v3
#        with:
#          name: terraform-api-output
#          path: output.log
#          
#  job5: 
#    runs-on: ubuntu-latest
#    needs: job1
#    steps:
#      - name: Using hashicoorp terraform
#        uses: hashicorp/setup-terraform@v3
#        with:
#          cli_config_credentials_token: ${{ secrets.TERRAFORM_TOKEN }}
#          
#      - name: Terraform fmt
#        id: fmt
#        run: terraform fmt -check
#        continue-on-error: true
#  
#      - name: Terraform Init
#        id: init
#        run: terraform init
#        
#      - name: terraform workspace show
#        run: terraform workspace show
#          
#      - name: Terraform Validate
#        id: validate
#        run: terraform validate -no-color
#  
#      - name: Terraform Plan
#        id: plan
#        run: terraform plan -no-color
#        continue-on-error: false
#      
 #     - name: Terraform Apply
 #       id: apply
 #       run: terraform apply -auto-approve
