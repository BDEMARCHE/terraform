name: Terraform CI
run-name: Deploy by @${{ github.actor }}
on:
  push:
    branches:
      - main
      
env:
  ORGANIZATION: "M2I"
  TERRAFORM_CLOUD: "app.terraform.io"
  TERRAFORM_WORKSPACE: "terraform"
  
jobs:

#
# je garde cet exemple
#
  sarathkrish:
    runs-on: ubuntu-latest
    steps:
        - name: get terraform details and not capture output
          uses: sarathkrish/invoke-terraform-run-api@v1.0
          with:
            workSpaceName: ${{ env.TERRAFORM_WORKSPACE }}
            organizationName: ${{ env.ORGANIZATION }}
            terraformToken: ${{ secrets.TERRAFORM_TOKEN }}
            terraformHost: ${{ env.TERRAFORM_CLOUD }}
            isDestroy: false
            message: 'GitHub Actions'
#
# lancement commande vers Terraform pour obtention du workspace id
# creation des outputs specifiques tfwks_id & tf_gitout_file
# stockage via GITHUB OUTPUT pour pouvoir recuperer ses valeurs dans un autre Job ( histoire de...)
#
  workspace_id:
    runs-on: ubuntu-latest
    outputs:
      tfwks_id: ${{ steps.stepgetoutput.outputs.WORKSPACE_ID }}
      tf_gitout_file: ${{ steps.stepgetoutput.outputs.GITHUBOUTPUT }}
    steps:
      - id : stepgetoutput
        name: Get Worspace ID and store it to GITHUB_OUTPUT
        run: |
           WORKSPACE_ID_T=($(curl -k --header "Authorization: Bearer ${{ secrets.TERRAFORM_TOKEN }}" --header "Content-Type: application/vnd.api+json" https://${{ env.TERRAFORM_CLOUD }}/api/v2/organizations/${{ env.ORGANIZATION }}/workspaces/${{ env.TERRAFORM_WORKSPACE }} 2>/dev/null))
           WORKSPACE_ID=($(echo $WORKSPACE_ID_T |jq -r '.data.id'))
           echo "GITHUBOUTPUT=$GITHUB_OUTPUT" >> $GITHUB_OUTPUT
           echo "WORKSPACE_ID=$WORKSPACE_ID" >> $GITHUB_OUTPUT
  #
  # on recupere le fichier GITHUB_OUTPUT dans un autre Job ( noter le <needs> )
  # et on va creer un artifact
  #
  artifact_workspace_id:
    runs-on: ubuntu-latest
    needs: workspace_id
    steps:
       - name: Run Terraform API Command and Capture Output
         env:
           MYWKSID: ${{ needs.job3.outputs.tfwks_id }}
           MYGOF: ${{ needs.job3.outputs.tf_gitout_file }}
         run: echo "$MYWKSID" > output.log

       - name: Upload Terraform API Command Output
         uses: actions/upload-artifact@v3
         with:
           name: terraform-api-output
           path: output.log
  #
  # Lancement Terraform
  #
  Terraform: 
    runs-on: ubuntu-latest
    steps:
      - name: starting by checkout
        uses: actions/checkout@v4
        
      - name: Using hashicoorp terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TERRAFORM_TOKEN }}
          
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
  
      - name: Terraform Init
        id: init
        run: terraform init
        
      - name: terraform workspace show
        run: terraform workspace show
          
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
  
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: false
      
 #     - name: Terraform Apply
 #       id: apply
 #       run: terraform apply -auto-approve
